// @hash v3-2B187850333AC4E195E6BF43F818A30DA1F4E641
// Automatically generated by ReactJS.NET. Do not edit, your changes will be overridden.
// Version: 3.0.0 (build 0) with Babel 6.7.7
// Generated at: 10/8/2016 11:05:18 AM
///////////////////////////////////////////////////////////////////////////////
var Clients = React.createClass({
    displayName: "Clients",

    propTypes: {
        clients: React.PropTypes.array.isRequired,
        vm: React.PropTypes.object.isRequired
    },
    getDefaultProps: function getDefaultProps() {
        return {
            clients: [],
            vm: {}
        };
    },
    getInitialState: function getInitialState() {
        return {
            allClients: this.props.clients
        };
    },
    render: function render() {
        return React.createElement(
            "div",
            null,
            React.createElement(
                "div",
                { className: "panel panel-primary" },
                React.createElement(
                    "div",
                    { className: "panel-heading" },
                    React.createElement(
                        "h3",
                        { className: "panel-title" },
                        "Clients"
                    )
                ),
                React.createElement(
                    "table",
                    { className: "table table-striped table-condensed" },
                    React.createElement(
                        "thead",
                        null,
                        React.createElement(
                            "tr",
                            null,
                            React.createElement(
                                "th",
                                null,
                                "Name"
                            )
                        )
                    ),
                    React.createElement(
                        "tbody",
                        null,
                        this.state.allClients.map(function (client, clientIndex) {
                            return React.createElement(ClientRow, { client: client, index: clientIndex });
                        })
                    )
                )
            ),
            React.createElement(
                "div",
                null,
                React.createElement("input", { type: "text", id: "txtNew", className: "col-md-6 col-xs-8" }),
                " ",
                React.createElement("input", { type: "button", className: "md-raised md-primary md-button md-ink-ripple", value: "Add", onClick: this.Save })
            )
        );
    },
    componentDidMount: function componentDidMount() {
        var url = "http://spdev/sites/ngreact/_api/lists/GetByTitle('Clients')/Items?$select=id,Title";

        $.ajax({
            url: url,
            headers: {
                "accept": "application/json;odata=verbose",
                "content-type": "application/json;odata=verbose"
            },
            success: function (data) {
                var clientsData = [];
                $.each(data.d.results, function (key, val) {
                    clientsData.push(val.Title);
                });

                this.setState({ allClients: clientsData });
            }.bind(this)
        });
    },
    Save: function Save() {
        clientData = this.state.allClients;
        clientData.push(document.getElementById('txtNew').value);
        this.setState({ allClients: clientData });
        this.props.vm.save(document.getElementById('txtNew').value);
    }
});

var ClientRow = React.createClass({
    displayName: "ClientRow",

    propTypes: {
        client: React.PropTypes.object.isRequired,
        index: React.PropTypes.number.isRequired
    },
    getDefaultProps: function getDefaultProps() {
        return {
            contact: {},
            index: 0
        };
    },
    render: function render() {
        return React.createElement(
            "tr",
            null,
            React.createElement(
                "td",
                null,
                this.props.client
            )
        );
    }
});

theApp.value('Clients', Clients);

theApp.directive('clients', function (reactDirective) {
    return reactDirective('Clients');
});