// @hash v3-381606BB44B9EB4F6C2AA2A6FEB83344F0A8AE1A
// Automatically generated by ReactJS.NET. Do not edit, your changes will be overridden.
// Version: 3.0.0 (build 0) with Babel 6.7.7
// Generated at: 10/7/2016 10:58:59 AM
///////////////////////////////////////////////////////////////////////////////
var Clients = React.createClass({
    displayName: 'Clients',

    getInitialState: function getInitialState() {
        return {
            allClients: []
        };
    },
    componentWillMount: function componentWillMount() {
        performance.mark('reactStart');
    },
    addNew: function addNew(Client) {
        console.log('add new here');
    },
    render: function render() {
        return React.createElement(
            'div',
            null,
            React.createElement(
                'div',
                { className: 'panel panel-primary' },
                React.createElement(
                    'div',
                    { className: 'panel-heading' },
                    React.createElement(
                        'h3',
                        { className: 'panel-title' },
                        'Clients'
                    )
                ),
                React.createElement(
                    'table',
                    { className: 'table table-striped table-condensed' },
                    React.createElement(
                        'thead',
                        null,
                        React.createElement(
                            'tr',
                            null,
                            React.createElement(
                                'th',
                                null,
                                'Name'
                            )
                        )
                    ),
                    React.createElement(
                        'tbody',
                        null,
                        this.state.allClients.map(function (client, clientIndex) {
                            return React.createElement(ClientRow, { client: client, index: clientIndex });
                        })
                    )
                )
            ),
            React.createElement(
                'div',
                null,
                React.createElement('input', { type: 'text', id: 'txtNew', className: 'col-md-6 col-xs-8' }),
                ' ',
                React.createElement('input', { type: 'button', className: 'md-raised md-primary md-button md-ink-ripple', value: 'Add', onClick: this.Save })
            )
        );
    },
    componentDidMount: function componentDidMount() {
        var url = "http://spdev/sites/react/_api/lists/GetByTitle('Clients')/Items?$select=id,Title";

        $.ajax({
            url: url,
            headers: {
                "accept": "application/json;odata=verbose",
                "content-type": "application/json;odata=verbose"
            },
            success: function (data) {
                var clientsData = [];
                $.each(data.d.results, function (key, val) {
                    clientsData.push(val.Title);
                });

                this.setState({ allClients: clientsData });
            }.bind(this)
        });
    },
    Save: function Save() {
        clientData = this.state.allClients;
        clientData.push(document.getElementById('txtNew').value);
        this.setState({ allClients: clientData });
        ClientsStore.addClient(document.getElementById('txtNew').value);
    }

});

var ClientRow = React.createClass({
    displayName: 'ClientRow',

    propTypes: {
        client: React.PropTypes.object.isRequired,
        index: React.PropTypes.number.isRequired
    },
    getDefaultProps: function getDefaultProps() {
        return {
            contact: {},
            index: 0
        };
    },
    getInitialState: function getInitialState() {
        return {
            pointer: 'pointer'
        };
    },
    render: function render() {
        return React.createElement(
            'tr',
            null,
            React.createElement(
                'td',
                null,
                this.props.client
            )
        );
    }
});

var ClientAdd = React.createClass({
    displayName: 'ClientAdd',

    render: function render() {
        return React.createElement(
            'div',
            null,
            React.createElement('textarea', { id: 'addAnswer', className: 'col-md-6 col-xs-8', onChange: this._onChange }),
            ' ',
            React.createElement('input', { type: 'button', className: 'btn btn-primary', value: 'Add', onClick: this.Save })
        );
    },
    Save: function () {
        clientData = this.state.allClients;
        clientData.push(this.txtNew.value);
        this.setState({ allClients: clientData });
    }.bind(this)
});